const vmt_MT4
	:MT4.Start
	:MT4.Change

func Main [in 0, out 7, local 3]
	$t0 = HeapAllocZ(4)
	[$t0] = :vmt_MT4
	if $t0 goto :null1
	Error("null pointer")
null1:
	$t1 = [$t0]
	$t1 = [$t1]
	local[0] = $t1
	local[1] = $t0
	local[2] = $t2
	$a0 = $t0
	$a1 = 1
	$a2 = 2
	$a3 = 3
	out[4] = 4
	out[5] = 5
	out[6] = 6
	call $t1
	$t1 = local[0]
	$t0 = local[1]
	$t2 = local[2]
	$t2 = $v0
	PrintIntS($t2)
	ret

func MT4.Start [in 7, out 7, local 9]
	$t6 = $a0
	$t0 = $a1
	$t1 = $a2
	$t2 = $a3
	$t3 = in[4]
	$t4 = in[5]
	$t5 = in[6]
	PrintIntS($a1)
	PrintIntS($a2)
	PrintIntS($a3)
	PrintIntS($t3)
	PrintIntS($t4)
	PrintIntS($t5)
	$t7 = [$t6]
	$t7 = [$t7+4]
	local[0] = $t3
	local[1] = $t4
	local[2] = $t8
	local[3] = $t5
	local[4] = $t6
	local[5] = $t0
	local[6] = $t1
	local[7] = $t2
	local[8] = $t7
	in[0] = $a0
	in[1] = $a1
	in[2] = $a2
	in[3] = $a3
	$a0 = $t6
	$a1 = in[6]
	$a2 = in[5]
	$a3 = in[4]
	out[4] = $t2
	out[5] = $t1
	out[6] = $t0
	call $t7
	$t3 = local[0]
	$t4 = local[1]
	$t8 = local[2]
	$t5 = local[3]
	$t6 = local[4]
	$t0 = local[5]
	$t1 = local[6]
	$t2 = local[7]
	$t7 = local[8]
	$a0 = in[0]
	$a1 = in[1]
	$a2 = in[2]
	$a3 = in[3]
	$t8 = $v0
	$v0 = $t8
	ret

func MT4.Change [in 7, out 0, local 6]
	$t0 = $a1
	$t1 = $a2
	$t2 = $a3
	$t3 = in[4]
	$t4 = in[5]
	$t5 = in[6]
	PrintIntS($a1)
	PrintIntS($a2)
	PrintIntS($a3)
	PrintIntS($t3)
	PrintIntS($t4)
	PrintIntS($t5)
	$v0 = 0
	ret

